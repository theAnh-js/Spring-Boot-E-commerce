package com.shopme.product;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;

import com.shopme.admin.product.ProductService;
import com.shopme.category.CategoryService;
import com.shopme.common.entity.Category;
import com.shopme.common.entity.Product;

@Controller
public class ProductController {
	
	@Autowired
	private ProductService productService;

	@Autowired
	private CategoryService categoryService;
	
	@GetMapping("/c/{category_alias}")
	public String viewCategory(@PathVariable("category_alias") String alias,
			Model model, @PathVariable("pageNum") Integer pageNum) {
		
		Category category = categoryService.getCategory(alias);
		
		if(category == null) {
			return "error/404";
		}
		
		List<Category> listCategoryParents = categoryService.getCategoryParent(category);
		Page<Product> pageProducts = productService.listByCategory(1, category.getId());
		
		long totalItems = page.getTotalElements();
		long totalPages = page.getTotalPages();
		long startCount = (pageNum - 1) * ProductService.PRODUCTS_PER_PAGE + 1;
		long endCount = startCount + ProductService.PRODUCTS_PER_PAGE - 1;
		if (endCount > totalItems) {
			endCount = totalItems;
		}

		List<Product> listProducts = page.getContent();

		List<Category> listCategories = categoryService.listCategoriesUsedInform();

		if (categoryId != null)
			model.addAttribute("categoryId", categoryId);
		model.addAttribute("listProducts", listProducts);
		model.addAttribute("listCategories", listCategories);
		model.addAttribute("totalItems", totalItems);
		model.addAttribute("totalPages", totalPages);
		model.addAttribute("startCount", startCount);
		model.addAttribute("endCount", endCount);
		model.addAttribute("keyword", keyword);
		model.addAttribute("sortField", sortField);
		model.addAttribute("sortDir", sortDir);
		model.addAttribute("reverseSortDir", reverseSortDir);
		model.addAttribute("currentPage", pageNum);
		
		model.addAttribute("listCategoryParents", listCategoryParents);
		model.addAttribute("pageTitle", category.getName());
		
		return "products_by_category";
	}
}
